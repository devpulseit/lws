services:
  coredns:
    image: coredns/coredns:latest
    container_name: coredns
    restart: unless-stopped
    # Важно: на хосте 53 должен быть свободен
    ports:
      - "53:53/udp"
      - "53:53/tcp"
    volumes:
      - ./Corefile:/Corefile:ro
      - ./zones:/zones:ro
    # Если хочешь логи сразу в stdout
    # command: ["-conf", "/Corefile"]

sego@268282:~/lws$ cat n-p-m/docker-compose.yml 
services:
  npm:
    image: 'jc21/nginx-proxy-manager:latest'
    container_name: nginx-proxy-manager
    restart: unless-stopped
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    volumes:
      - npm_data:/data
      - npm_letsencrypt:/etc/letsencrypt
    networks:
      - npm-network

networks:
  npm-network:
    name: npm-network
    driver: bridge

volumes:
  npm_data:
  npm_letsencrypt:
sego@268282:~/lws$ cat dns/docker-compose.yml 
services:
  coredns:
    image: coredns/coredns:latest
    container_name: coredns
    restart: unless-stopped
    # Важно: на хосте 53 должен быть свободен
    ports:
      - "53:53/udp"
      - "53:53/tcp"
    volumes:
      - ./Corefile:/Corefile:ro
      - ./zones:/zones:ro
    # Если хочешь логи сразу в stdout
    # command: ["-conf", "/Corefile"]
sego@268282:~/lws$ cat dev-frontend/docker-compose.yml 
services:
  velocity-dev:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: velocity-dev
    restart: unless-stopped
    networks:
      - npm-network

networks:
  npm-network:
    external: true


