name: deploy
on:
  push:
    branches: [main, dev]
  workflow_dispatch:

concurrency:
  group: deploy-${{ github.ref_name }}
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      - name: Ensure folders and acme.json
        run: |
          sudo mkdir -p /opt/velocity-site/traefik/letsencrypt
          sudo touch /opt/velocity-site/traefik/letsencrypt/acme.json
          sudo chmod 600 /opt/velocity-site/traefik/letsencrypt/acme.json

      - name: Sync infra to /opt/velocity-site
        run: sudo rsync -a --delete infra/ /opt/velocity-site/

      - name: GHCR login (for docker compose pull)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Compute tags for compose
        id: vars
        run: |
          SHA=${GITHUB_SHA::7}
          if [ "${GITHUB_REF_NAME}" = "main" ]; then
            echo "GIT_TAG_PROD=latest" >> $GITHUB_OUTPUT
            echo "GIT_TAG_DEV=dev" >> $GITHUB_OUTPUT
          else
            echo "GIT_TAG_PROD=latest" >> $GITHUB_OUTPUT
            echo "GIT_TAG_DEV=dev" >> $GITHUB_OUTPUT
          fi

      - name: Deploy (docker compose up -d)
        working-directory: /opt/velocity-site
        env:
          # для traefik:
          ACME_EMAIL: ${{ secrets.ACME_EMAIL }}
          # для basic-auth dev:
          DEV_BASIC_AUTH_BCRYPT: ${{ secrets.DEV_BASIC_AUTH_BCRYPT }}
          # для image-меток:
          GITHUB_REPOSITORY: ${{ github.repository }}
          GIT_TAG_PROD: ${{ steps.vars.outputs.GIT_TAG_PROD }}
          GIT_TAG_DEV: ${{ steps.vars.outputs.GIT_TAG_DEV }}
        run: |
          docker compose pull || true
          docker compose up -d
          docker system prune -f
