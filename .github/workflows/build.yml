name: build-image
on:
  push:
    branches: [main, dev]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  docker:
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Detect build dir (dist or build)
        id: detect
        shell: bash
        run: |
          node -e "const p=require('./package.json'); \
            const hasVite = (p.devDependencies&&p.devDependencies.vite)||(p.dependencies&&p.dependencies.vite); \
            console.log('BUILD_DIR='+(hasVite?'dist':'build'))" >> $GITHUB_OUTPUT

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Compute tags
        id: tags
        run: |
          SHA=${GITHUB_SHA::7}
          if [ "${GITHUB_REF_NAME}" = "main" ]; then
            echo "TAG1=${SHA}" >> $GITHUB_OUTPUT
            echo "TAG2=latest" >> $GITHUB_OUTPUT
          else
            echo "TAG1=${SHA}-dev" >> $GITHUB_OUTPUT
            echo "TAG2=dev" >> $GITHUB_OUTPUT
          fi

      - name: Build & push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: infra/Dockerfile
          push: true
          build-args: |
            BUILD_DIR=${{ steps.detect.outputs.BUILD_DIR }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.tags.outputs.TAG1 }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.tags.outputs.TAG2 }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
